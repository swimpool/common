angular.module("widgetgecko.services",[]).factory("Chameleon",function($rootScope){chameleon.widget({onLoad:function(){$rootScope.$broadcast("chameleon.load")},onCreate:function(){$rootScope.$broadcast("chameleon.create")},onResume:function(){$rootScope.$broadcast("chameleon.resume")},onPause:function(){$rootScope.$broadcast("chameleon.pause")},onLanguageChanged:function(){$rootScope.$broadcast("chameleon.languageChange")},onScrollTop:function(){$rootScope.$broadcast("chameleon.scrollTop")},onScrollElsewhere:function(){$rootScope.$broadcast("chameleon.scrollElsewhere")},onLayoutModeStart:function(){$rootScope.$broadcast("chameleon.layoutStart")},onLayoutModeComplete:function(){$rootScope.$broadcast("chameleon.layoutComplete")},onConnectionAvailableChanged:function(available){if(available){$rootScope.$broadcast("chameleon.connect")}else{$rootScope.$broadcast("chameleon.disconnect")}},onConfigure:function(){$rootScope.$broadcast("chameleon.configure")},onTitleBar:function(){$rootScope.$broadcast("chameleon.titlebar")},onRefresh:function(){$rootScope.$broadcast("chameleon.refresh")},onAction:function(){$rootScope.$broadcast("chameleon.action")},notChameleon:function(){$rootScope.$broadcast("chameleon.notchameleon")}});$rootScope.$on("chameleon.polling.start",function(event,data){chameleon.poll({id:data.id,action:"start",interval:data.interval*1e3,callback:data.callback})});$rootScope.$on("chameleon.polling.stop",function(event,data){chameleon.poll({id:data.id,action:"stop"})});$rootScope.$on("chameleon.setTitle",function(event,title){chameleon.setTitle({text:title})});$rootScope.$on("chameleon.openLink",function(url){if(chameleon.connected()){chameleon.intent({action:"android.intent.action.VIEW",data:url})}})});